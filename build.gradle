import java.nio.charset.StandardCharsets

group 'br.com.doliver'
version '1.0-SNAPSHOT'

buildscript {
  repositories {
    mavenCentral()
    gradlePluginPortal()
  }

  dependencies {
    classpath 'gradle.plugin.com.github.spotbugs.snom:spotbugs-gradle-plugin:4.7.5'
    classpath 'com.github.davidmc24.gradle.plugin:gradle-avro-plugin:1.8.0'
  }
}

subprojects {
  apply plugin: 'java-library'

  repositories {
    mavenCentral()
    maven {
      url = 'https://packages.confluent.io/maven/'
    }
  }

  sourceCompatibility = JavaVersion.VERSION_16
  targetCompatibility = JavaVersion.VERSION_16

  compileJava.options.encoding = StandardCharsets.UTF_8.displayName()

  dependencies {
    compileOnly 'com.github.spotbugs:spotbugs-annotations:4.4.1'
    compileOnly 'org.projectlombok:lombok:1.18.20'
    compileOnly 'org.apache.avro:avro:1.11.2'
    annotationProcessor 'org.projectlombok:lombok:1.18.20'

    testCompileOnly 'org.projectlombok:lombok:1.18.20'
    testCompileOnly 'com.github.spotbugs:spotbugs-annotations:4.4.1'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.20'

    testImplementation 'org.apache.avro:avro:1.11.2'
    testImplementation 'org.junit.jupiter:junit-jupiter:5.4.2'
    testImplementation 'org.mockito:mockito-junit-jupiter:3.1.0'
  }

  test {
    useJUnitPlatform()
    testLogging {
      events 'passed', 'skipped', 'failed'
    }
  }

  apply plugin: 'pmd'
  apply plugin: 'checkstyle'
  apply plugin: 'com.github.spotbugs'
  apply plugin: 'com.github.davidmc24.gradle.plugin.avro'

  checkstyle {
    configFile = file("${rootDir}/checkstyle.xml")
    maxErrors = 0
    maxWarnings = 0
    ignoreFailures = false
    toolVersion('10.12.2')
  }

  pmd {
    toolVersion = '6.43.0'
    ruleSets = []
    consoleOutput = true
    ruleSetFiles("$rootProject.projectDir/pmd.xml")
  }

  spotbugs {
    showProgress = true
    excludeFilter = file("$rootProject.projectDir/spotbugs.xml")
  }

  spotbugsMain {
    reports {
      html {
        enabled = true
        stylesheet = 'fancy-hist.xsl'
      }
    }
  }

  spotbugsTest {
    reports {
      html {
        enabled = true
        stylesheet = 'fancy-hist.xsl'
      }
    }
  }
}

project(':application:core') {
  dependencies {
    // Spring
    implementation 'org.springframework.boot:spring-boot-starter:2.6.7'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa:2.6.7'
    implementation 'org.springframework.kafka:spring-kafka:2.6.7'

    // Database
    implementation 'org.postgresql:postgresql:42.3.4'
    // implementation "com.oracle.database.jdbc:ojdbc10:19.17.0.0"

    // Kafka
    implementation 'io.confluent:kafka-avro-serializer:5.3.0'

    // Others
    implementation 'javax.xml.bind:jaxb-api:2.4.0-b180830.0359'
  }
}

project(':application:rest-api') {
  apply plugin: 'application'
  mainClassName = 'br.com.doliver.Application'

  dependencies {
    implementation project(':application:core')

    // Spring
    implementation 'org.springframework.boot:spring-boot-starter-web:2.6.7'
    testImplementation 'org.springframework.boot:spring-boot-starter-test:2.6.7'

    // Tests
    testImplementation 'io.rest-assured:rest-assured:5.2.0'
    testImplementation 'com.github.tomakehurst:wiremock-standalone:2.19.0'
    testImplementation 'org.springframework.cloud:spring-cloud-contract-wiremock:2.2.6.RELEASE'
    testImplementation 'br.com.leonardoferreira:JBacon:2.1.1'
    testImplementation 'com.h2database:h2:2.1.214'
    testImplementation 'org.springframework.boot:spring-boot-starter-data-jpa:2.6.7'
  }
}

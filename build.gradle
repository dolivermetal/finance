import java.nio.charset.StandardCharsets

group 'br.com.doliver'
version '1.0-SNAPSHOT'

buildscript {
  ext {
    lombokVersion = '1.18.20'
    springBootVersion = '2.6.7'
    postgresVersion = '42.3.4'
    jaxbApiVersion = '2.4.0-b180830.0359'
  }

  repositories {
    mavenCentral()
    gradlePluginPortal()
  }

  dependencies {
    classpath 'gradle.plugin.com.github.spotbugs.snom:spotbugs-gradle-plugin:4.7.5'
  }
}

subprojects {
  apply plugin: 'java-library'

  repositories {
    mavenCentral()
  }

  sourceCompatibility = JavaVersion.VERSION_16
  targetCompatibility = JavaVersion.VERSION_16

  compileJava.options.encoding = StandardCharsets.UTF_8.displayName()

  dependencies {
    compileOnly 'com.github.spotbugs:spotbugs-annotations:4.4.1'
    compileOnly "org.projectlombok:lombok:${lombokVersion}"
    annotationProcessor "org.projectlombok:lombok:${lombokVersion}"

    testCompileOnly "org.projectlombok:lombok:${lombokVersion}"
    testAnnotationProcessor "org.projectlombok:lombok:${lombokVersion}"

//    testImplementation 'org.junit.jupiter:junit-jupiter:5.4.2'
//    testImplementation 'org.mockito:mockito-junit-jupiter:3.1.0'
  }

//  test {
//    useJUnitPlatform()
//    testLogging {
//      events 'passed', 'skipped', 'failed'
//    }
//  }

  apply plugin: 'pmd'
  apply plugin: 'checkstyle'
  apply plugin: 'com.github.spotbugs'

  checkstyle {
    configFile = file("${rootDir}/checkstyle.xml")
    maxErrors = 0
    maxWarnings = 0
    ignoreFailures = false
    toolVersion('8.28')
  }

  pmd {
    toolVersion = '6.43.0'
    ruleSets = []
    consoleOutput = true
    ruleSetFiles("$rootProject.projectDir/pmd.xml")
  }

  spotbugs {
    showProgress = true
    excludeFilter = file("$rootProject.projectDir/spotbugs.xml")
  }

  spotbugsMain {
    reports {
      html {
        enabled = true
        stylesheet = 'fancy-hist.xsl'
      }
    }
  }
}

project(':application:core') {
  dependencies {
    // Spring
    implementation "org.springframework.boot:spring-boot-starter:${springBootVersion}"
    implementation "org.springframework.boot:spring-boot-starter-data-jpa:${springBootVersion}"

    // Database
    implementation "org.postgresql:postgresql:${postgresVersion}"
    implementation "javax.xml.bind:jaxb-api:${jaxbApiVersion}"
  }
}

project(':application:rest-api') {
  apply plugin: 'application'

  mainClassName = 'br.com.doliver.Application'

  dependencies {
    implementation project(':application:core');

    // Spring
    implementation "org.springframework.boot:spring-boot-starter-web:${springBootVersion}"

  }
}
